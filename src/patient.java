
import java.sql.*;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.function.Supplier;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.*;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author mybaby
 */
public final class patient extends javax.swing.JFrame {

    /**
     * Creates new form patient
     */
    public patient() {

        initComponents();
        try {
            Connect();
        } catch (SQLException ex) {
            Logger.getLogger(patient.class.getName()).log(Level.SEVERE, null, ex);
        }
        autoId();

    }

    Connection con;
    PreparedStatement pst;
    ResultSet rs;

    public void Connect() throws SQLException {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/hastane?user=root&password=20212021Fb");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(User.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void autoId() {
        patient_table();
        try {
            Connect();
            Statement s = con.createStatement();

            rs = s.executeQuery("SELECT MAX(patientno) FROM patient");
            rs.next();
            rs.getString("MAX(patientno)");

            if (rs.getString("MAX(patientno)") == null) {
                lbl_pnumber.setText("PS001");
            } else {
                long id = Long.parseLong(rs.getString("MAX(patientno)").substring(2, rs.getString("MAX(patientno)").length()));
                id++;
                lbl_pnumber.setText("PS" + String.format("%03d", id));
            }
        } catch (SQLException ex) {
            Logger.getLogger(patient.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        pmit_add = new javax.swing.JMenuItem();
        pmit_update = new javax.swing.JMenuItem();
        pmit_back = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_pname = new javax.swing.JTextField();
        lbl_pnumber = new javax.swing.JLabel();
        txt_phonenumber = new javax.swing.JTextField();
        rbtn_male = new javax.swing.JRadioButton();
        rbtn_female = new javax.swing.JRadioButton();
        btn_add = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        chb_inpatient = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        cmb_proom = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cmb_pbed = new javax.swing.JComboBox<>();
        btn_exit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_patient = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        btn_bed = new javax.swing.JButton();

        pmit_add.setText("Add");
        pmit_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pmit_addActionPerformed(evt);
            }
        });
        jPopupMenu1.add(pmit_add);

        pmit_update.setText("Update");
        pmit_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pmit_updateActionPerformed(evt);
            }
        });
        jPopupMenu1.add(pmit_update);

        pmit_back.setText("Back");
        pmit_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pmit_backActionPerformed(evt);
            }
        });
        jPopupMenu1.add(pmit_back);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jPanel2.setBackground(new java.awt.Color(255, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Patient", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 18))); // NOI18N
        jPanel2.setComponentPopupMenu(jPopupMenu1);

        jLabel1.setText("Patient Number ");

        jLabel2.setText("Patient Name");

        jLabel3.setText("Phone");

        jLabel4.setText("Patient Gender");

        lbl_pnumber.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N

        buttonGroup1.add(rbtn_male);
        rbtn_male.setText("Erkek");

        buttonGroup1.add(rbtn_female);
        rbtn_female.setSelected(true);
        rbtn_female.setText("KadÄ±n");

        btn_add.setText("Add");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        chb_inpatient.setText("Inpatient");
        chb_inpatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chb_inpatientActionPerformed(evt);
            }
        });

        jLabel6.setText("Room Number");

        cmb_proom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6" }));
        cmb_proom.setEnabled(false);
        cmb_proom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_proomActionPerformed(evt);
            }
        });

        jLabel7.setText("Bed Number");

        cmb_pbed.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0" }));
        cmb_pbed.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 38, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(chb_inpatient, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(203, 203, 203))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_pname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_pnumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(rbtn_male, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_phonenumber, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                .addComponent(rbtn_female, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmb_proom, 0, 108, Short.MAX_VALUE)
                                .addComponent(cmb_pbed, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(46, 46, 46))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lbl_pnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_pname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_phonenumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(rbtn_male)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtn_female)))
                .addGap(33, 33, 33)
                .addComponent(chb_inpatient)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cmb_proom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cmb_pbed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        btn_exit.setText("Exit");
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });

        tbl_patient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient No", "Name", "Phone", "Gender", "Room No", "Bed No"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbl_patient.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbl_patient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_patientMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_patient);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setText("Hasta KayÄ±t");

        btn_bed.setText("Yatak Durumu");
        btn_bed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(335, 335, 335)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_bed, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(btn_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_bed, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        
        String pno = lbl_pnumber.getText();
        String pname = txt_pname.getText();
        String phone = txt_phonenumber.getText();
        Pattern pt = Pattern.compile("[1-9][\\d]{2}[\\d]{3}[\\d]{4}");
        Matcher regexMatcher = pt.matcher(phone);
        boolean isMatched = regexMatcher.matches();
        if(!isMatched) {
            JOptionPane.showMessageDialog(this, "Telefon numarasÄ±nÄ± yanlÄ±Å girdiniz!. (Ãrnek: 5054743153)");
            return;
        }

        String pgender;
        if (rbtn_female.isSelected()) {
            pgender = "KadÄ±n";
        } else {
            pgender = "Erkek";
        }

        int proom = 0;
        int bedno = 0;

        if (pname.equals("") || phone.equals("")) {
            JOptionPane.showMessageDialog(this, "Hasta AdÄ± veya Telefon numarasÄ± boÅ bÄ±rakÄ±lamaz");
        } else {
            if (chb_inpatient.isSelected()) {
                proom = Integer.parseInt(cmb_proom.getSelectedItem().toString());
                bedno = Integer.parseInt(cmb_pbed.getSelectedItem().toString());
            }

            try {
                Connect();
                
                pst = con.prepareStatement("Update bed SET patient_no = ? WHERE bed_no = ?");
                pst.setString(1, pno);
                pst.setInt(2,bedno);
                pst.executeUpdate();
                
                pst = con.prepareStatement("INSERT INTO patient(patientno,name,phone,gender,patientroom,bedno) values(?,?,?,?,?,?)");
                pst.setString(1, pno);
                pst.setString(2, pname);
                pst.setString(3, phone);
                pst.setString(4, pgender);
                pst.setInt(5, proom);
                pst.setInt(6, bedno);
                pst.executeUpdate();

                JOptionPane.showMessageDialog(this, "Hasta Kaydedildi...");
                autoId();
                txt_pname.setText("");
                txt_phonenumber.setText("");
                patient_table();

            } catch (SQLException ex) {
                Logger.getLogger(patient.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        chb_inpatient.setSelected(false);
        cmb_proom.setEnabled(false);
        cmb_pbed.setEnabled(false);
    }//GEN-LAST:event_btn_addActionPerformed

    private void tbl_patientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_patientMouseClicked
        DefaultTableModel d1 = (DefaultTableModel) tbl_patient.getModel();
        int selectedIndex = tbl_patient.getSelectedRow();

        lbl_pnumber.setText(d1.getValueAt(selectedIndex, 0).toString());
        txt_pname.setText(d1.getValueAt(selectedIndex, 1).toString());
        txt_phonenumber.setText(d1.getValueAt(selectedIndex, 2).toString());
        if (d1.getValueAt(selectedIndex, 3).equals("KadÄ±n")) {
            rbtn_female.setSelected(true);
        } else if (d1.getValueAt(selectedIndex, 3).equals("Erkek")) {
            rbtn_male.setSelected(true);
        }

        btn_update.setEnabled(true);
    }//GEN-LAST:event_tbl_patientMouseClicked

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed

        String pno = lbl_pnumber.getText();
        String pname = txt_pname.getText();
        String phone = txt_phonenumber.getText();
        String pgender;
        if (rbtn_female.isSelected()) {
            pgender = "KadÄ±n";
        } else {
            pgender = "Erkek";
        }

        int proom = Integer.parseInt(cmb_proom.getSelectedItem().toString());
        int bedno = Integer.parseInt(cmb_pbed.getSelectedItem().toString());

        try {
            Connect();
            pst = con.prepareStatement("UPDATE bed SET patient_no = NULL WHERE patient_no = ?");
            pst.setString(1, pno);
            pst.executeUpdate();
            
            pst = con.prepareStatement("UPDATE bed SET patient_no = ? WHERE bed_no = ?");
            pst.setString(1, pno);
            pst.setInt(2, bedno);
            pst.executeUpdate();
                                 
            pst = con.prepareStatement("UPDATE patient SET name = ?, phone = ?, gender = ?, patientroom = ?, bedno = ? WHERE patientno = ?");
            pst.setString(1, pname);
            pst.setString(2, phone);
            pst.setString(3, pgender);
            pst.setInt(4, proom);
            pst.setInt(5, bedno);
            pst.setString(6, pno);

            pst.executeUpdate();

            JOptionPane.showMessageDialog(this, "Hasta Bilgileri GÃ¼ncellendi...");
            autoId();
            txt_pname.setText("");
            txt_phonenumber.setText("");
            patient_table();
            btn_update.setEnabled(true);

        } catch (SQLException ex) {
            Logger.getLogger(patient.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        chb_inpatient.setSelected(false);
        cmb_proom.setEnabled(false);
        cmb_pbed.setEnabled(false);
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        String pno = lbl_pnumber.getText();

        try {
            Connect();
            pst = con.prepareStatement("UPDATE bed SET patient_no = NULL WHERE patient_no = ?");
            pst.setString(1, pno);
            pst.executeUpdate();
            
            pst = con.prepareStatement("DELETE FROM patient WHERE patientno = ?");

            pst.setString(1, pno);

            pst.executeUpdate();

            JOptionPane.showMessageDialog(this, "Hasta Bilgileri Silindi!..");
            autoId();
            txt_pname.setText("");
            txt_phonenumber.setText("");
            patient_table();
            btn_update.setEnabled(true);

        } catch (SQLException ex) {
            Logger.getLogger(patient.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        chb_inpatient.setSelected(false);
        cmb_proom.setEnabled(false);
        cmb_pbed.setEnabled(false);
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btn_exitActionPerformed

    private void btn_bedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bedActionPerformed
        bed b = new bed();
        b.setVisible(true);
    }//GEN-LAST:event_btn_bedActionPerformed

    private void chb_inpatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chb_inpatientActionPerformed

        if (chb_inpatient.isSelected()) {
            cmb_proom.setEnabled(true);

        } else {

            cmb_proom.setEnabled(false);
            cmb_pbed.setEnabled(false);
        }
    }//GEN-LAST:event_chb_inpatientActionPerformed

    private void cmb_proomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_proomActionPerformed

        cmb_pbed.setEnabled(true);
        try {
            pst = con.prepareStatement("SELECT bed_no FROM bed WHERE room_no = ? AND patient_no IS NULL");
            pst.setInt(1, Integer.parseInt(cmb_proom.getSelectedItem().toString()));
            rs = pst.executeQuery();
            ArrayList<String> datas = new ArrayList();
            while (rs.next()) {
                datas.add(rs.getString("bed_no"));
            }
            if (datas.isEmpty()) {
                cmb_pbed.setModel(new DefaultComboBoxModel(new String[] {"BoÅ Yatak yok"}));
                btn_add.setEnabled(false);
                btn_update.setEnabled(false);
            } else {
                cmb_pbed.setModel(new DefaultComboBoxModel(datas.toArray(String[]::new)));
                btn_add.setEnabled(true);
                btn_update.setEnabled(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(patient.class.getName()).log(Level.SEVERE, null, ex);
            cmb_pbed.setModel(new DefaultComboBoxModel(new String[]{"HATA"}));
            cmb_pbed.setEnabled(false);
        }
    }//GEN-LAST:event_cmb_proomActionPerformed

    private void pmit_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pmit_addActionPerformed
        String pno = lbl_pnumber.getText();
        String pname = txt_pname.getText();
        String phone = txt_phonenumber.getText();
        Pattern pt = Pattern.compile("[1-9][\\d]{2}[\\d]{3}[\\d]{4}");
        Matcher regexMatcher = pt.matcher(phone);
        boolean isMatched = regexMatcher.matches();
        if(!isMatched) {
            JOptionPane.showMessageDialog(this, "Telefon numarasÄ±nÄ± yanlÄ±Å girdiniz!. (Ãrnek: 5054743153)");
            return;
        }

        String pgender;
        if (rbtn_female.isSelected()) {
            pgender = "KadÄ±n";
        } else {
            pgender = "Erkek";
        }

        int proom = 0;
        int bedno = 0;

        if (pname.equals("") || phone.equals("")) {
            JOptionPane.showMessageDialog(this, "Hasta AdÄ± veya Telefon numarasÄ± boÅ bÄ±rakÄ±lamaz");
        } else {
            if (chb_inpatient.isSelected()) {
                proom = Integer.parseInt(cmb_proom.getSelectedItem().toString());
                bedno = Integer.parseInt(cmb_pbed.getSelectedItem().toString());
            }

            try {
                Connect();
                
                pst = con.prepareStatement("Update bed SET patient_no = ? WHERE bed_no = ?");
                pst.setString(1, pno);
                pst.setInt(2,bedno);
                pst.executeUpdate();
                
                pst = con.prepareStatement("INSERT INTO patient(patientno,name,phone,gender,patientroom,bedno) values(?,?,?,?,?,?)");
                pst.setString(1, pno);
                pst.setString(2, pname);
                pst.setString(3, phone);
                pst.setString(4, pgender);
                pst.setInt(5, proom);
                pst.setInt(6, bedno);
                pst.executeUpdate();

                JOptionPane.showMessageDialog(this, "Hasta Kaydedildi...");
                autoId();
                txt_pname.setText("");
                txt_phonenumber.setText("");
                patient_table();

            } catch (SQLException ex) {
                Logger.getLogger(patient.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        chb_inpatient.setSelected(false);
        cmb_proom.setEnabled(false);
        cmb_pbed.setEnabled(false);
    }//GEN-LAST:event_pmit_addActionPerformed

    private void pmit_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pmit_updateActionPerformed
        String pno = lbl_pnumber.getText();
        String pname = txt_pname.getText();
        String phone = txt_phonenumber.getText();
        String pgender;
        if (rbtn_female.isSelected()) {
            pgender = "KadÄ±n";
        } else {
            pgender = "Erkek";
        }

        int proom = Integer.parseInt(cmb_proom.getSelectedItem().toString());
        int bedno = Integer.parseInt(cmb_pbed.getSelectedItem().toString());

        try {
            Connect();
            pst = con.prepareStatement("UPDATE bed SET patient_no = NULL WHERE patient_no = ?");
            pst.setString(1, pno);
            pst.executeUpdate();
            
            pst = con.prepareStatement("UPDATE bed SET patient_no = ? WHERE bed_no = ?");
            pst.setString(1, pno);
            pst.setInt(2, bedno);
            pst.executeUpdate();
                                 
            pst = con.prepareStatement("UPDATE patient SET name = ?, phone = ?, gender = ?, patientroom = ?, bedno = ? WHERE patientno = ?");
            pst.setString(1, pname);
            pst.setString(2, phone);
            pst.setString(3, pgender);
            pst.setInt(4, proom);
            pst.setInt(5, bedno);
            pst.setString(6, pno);

            pst.executeUpdate();

            JOptionPane.showMessageDialog(this, "Hasta Bilgileri GÃ¼ncellendi...");
            autoId();
            txt_pname.setText("");
            txt_phonenumber.setText("");
            patient_table();
            btn_update.setEnabled(true);

        } catch (SQLException ex) {
            Logger.getLogger(patient.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        chb_inpatient.setSelected(false);
        cmb_proom.setEnabled(false);
        cmb_pbed.setEnabled(false);
    }//GEN-LAST:event_pmit_updateActionPerformed

    private void pmit_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pmit_backActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_pmit_backActionPerformed

    public void patient_table() {

        try {
            Connect();
            pst = con.prepareStatement("SELECT * FROM patient");
            rs = pst.executeQuery();
            ResultSetMetaData rsm = rs.getMetaData();
            int c;
            c = rsm.getColumnCount();

            DefaultTableModel df = (DefaultTableModel) tbl_patient.getModel();
            df.setRowCount(0);

            while (rs.next()) {
                Vector v2 = new Vector();

                for (int i = 0; i <= c; i++) {
                    v2.add(rs.getString("patientno"));
                    v2.add(rs.getString("name"));
                    v2.add(rs.getString("phone"));
                    v2.add(rs.getString("gender"));
                    v2.add(rs.getInt("patientroom"));
                    v2.add(rs.getInt("bedno"));
                }
                df.addRow(v2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(patient.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new patient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_bed;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_update;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chb_inpatient;
    private javax.swing.JComboBox<String> cmb_pbed;
    private javax.swing.JComboBox<String> cmb_proom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_pnumber;
    private javax.swing.JMenuItem pmit_add;
    private javax.swing.JMenuItem pmit_back;
    private javax.swing.JMenuItem pmit_update;
    private javax.swing.JRadioButton rbtn_female;
    private javax.swing.JRadioButton rbtn_male;
    private javax.swing.JTable tbl_patient;
    private javax.swing.JTextField txt_phonenumber;
    private javax.swing.JTextField txt_pname;
    // End of variables declaration//GEN-END:variables
}
